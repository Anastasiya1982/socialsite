{"version":3,"sources":["redux/dialogs-reducer.js","assets/img/man.png","assets/loading.gif","components/Profile/MyPosts/Post/Post.module.css","components/Nav/Nav.module.css","api/api.js","redux/profile-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Nav/Nav.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","components/common/FormControls/FormsControls.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollowUsers","userId","delete","followUsers","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","posts","like","profile","setStatusAC","profileReducer","newPost","newMyPostText","filter","p","postId","sidebarReducer","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","map","u","followed","count","login","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store_","Nav","className","s","nav","item","to","activeClassName","activeLink","active","Paginator","onCurrentPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","selectedPage","e","User","user","unfollow","follow","userItem","usersImg","usersPhoto","alt","src","photos","small","userPhoto","disabled","some","userInfo","Users","props","key","Preloader","preloader","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","this","React","Component","connect","bind","items","totalCount","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onBlur","autoFocus","onChange","currentTarget","value","ProfileInfo","undefined","profileItem","aboutme","avatar","aboutMe","contacts","vk","Post","massage","maxLength10","maxLengthCreator","MyPosts","memo","postsElement","reverse","postwrapp","AddNewMyPostFormRedux","onSubmit","values","addPost","reduxForm","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","match","params","authorizedUserId","history","getUserProfile","withRouter","Header","header","loginBlock","logout","HeaderContainer","LoginReduxForm","error","Input","formSummaryError","length","stopSubmit","_error","formData","withSuspense","fallback","DialogsContainer","lazy","App","initializeApp","path","render","LoginPage","AppContainer","MainAppComponent","basename","process","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","input","meta","hasError","touched","formControl"],"mappings":"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","file":"static/js/main.b23676a1.chunk.js","sourcesContent":["const SENT_MESSAGE = \"SENT_MESSAGE\";\r\n\r\n let initialState ={\r\n     dialogs: [\r\n         {id: 1, name: \"Dimych\"},\r\n         {id: 2, name: \"Andrey\"},\r\n         {id: 3, name: \"Viktor\"},\r\n         {id: 4, name: \"Sasha\"},\r\n         {id: 5, name: \"Valera\"},\r\n         {id: 6, name: \"Ihor\"}\r\n     ],\r\n     messages: [\r\n         {id: 1, message: \"Hi\"},\r\n         {id: 2, message: \"How are you?\"},\r\n         {id: 3, message: \"I want to meet with you?\"},\r\n         {id: 4, message: \"Lets go for a walk\"}\r\n     ],\r\n\r\n }\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SENT_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 7, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator=(newMessageBody)=>({ type:SENT_MESSAGE,newMessageBody});\r\n\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/man.73fb0d96.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.b6ff8505.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__7Xcel\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2A2Oo\",\"item\":\"Nav_item__3KuQS\",\"activeLink\":\"Nav_activeLink__3zyOq\"};","import * as axios from \"axios\";\r\n\r\n\r\nconst instance=axios.create(\r\n    {\r\n        withCredentials:true,\r\n        baseURL:`https://social-network.samuraijs.com/api/1.0/`,\r\n        headers:{\"API-KEY\":\"0e5317f8-1eba-40e8-9b59-8d5e29cf9296\"}\r\n    }\r\n);\r\n\r\nexport  const usersAPI={\r\n    getUsers(currentPage=1,pageSize=10){\r\n        return  instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response=> {\r\n                return response.data;\r\n            });\r\n    },\r\n    unfollowUsers(userId){\r\n        return  instance.delete(`follow/${userId}`)\r\n            .then(response=> {\r\n                return response.data;\r\n            });\r\n    },\r\n    followUsers(userId){\r\n        return  instance.post(`follow/${userId}`)\r\n            .then(response=> {\r\n                return response.data;\r\n            });\r\n    },\r\n    getProfile(userId){\r\n        console.warn(\"Obsolete method.Please profileAPI object.\")\r\n        return profileAPI.getProfile(userId);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport  const profileAPI= {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status:status});\r\n    }\r\n}\r\n\r\nexport  const authAPI={\r\n    authMe(){\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email,password,rememberMe=false){\r\n        return instance.post(`auth/login`,{email,password,rememberMe});\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST=\"ADD-POST\";\r\nconst SET_USER_PROFILE=\"SET_USER_PROFILE\";\r\nconst SET_STATUS=\"SET-STATUS\";\r\nconst DELETE_POST=\"DELETE-POST\";\r\n\r\nlet initialState={\r\n    posts: [\r\n        {id: 1, message: \"Hi! How are you?\", like: 5},\r\n        {id: 2, message: \"It's my first post\", like: 12},\r\n\r\n    ],\r\n\r\n    profile: null,\r\n    status:'',\r\n};\r\n\r\n const  profileReducer=(state=initialState,action)=>{\r\n     switch (action.type) {\r\n         case ADD_POST: {\r\n             let newPost = {\r\n                 id: 5,\r\n                 message: action.newMyPostText,\r\n                 like: 0\r\n             };\r\n             return {\r\n                 ...state,\r\n                 posts: [...state.posts, newPost],\r\n\r\n             }\r\n         }\r\n        case SET_USER_PROFILE:{\r\n             return {\r\n                 ...state,\r\n                 profile:action.profile\r\n             }\r\n         }\r\n         case SET_STATUS:{\r\n             return {\r\n                 ...state,\r\n                 status:action.status\r\n             }\r\n         }\r\n         case DELETE_POST:{\r\n             return {\r\n                 ...state,\r\n                 posts:state.posts.filter(p=>p.id!==action.postId)\r\n             }\r\n         }\r\n\r\n         default:\r\n             return state;\r\n     }\r\n }\r\nexport const addPostActionCreator=(newMyPostText)=>({ type:ADD_POST,newMyPostText});\r\nexport  const setStatusAC=(status)=>({type:SET_STATUS,status});\r\nexport const setUserProfile=(profile)=>({type:SET_USER_PROFILE,profile});\r\nexport  const deletePost=(postId)=>({type:DELETE_POST,postId});\r\n\r\n//создаем  thunkCreator для получения профилей юзеров\r\nexport const getUserProfile=(userId)=>async (dispatch)=>{\r\n    let response = await usersAPI.getProfile(userId);\r\n           dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus=(userId)=>async (dispatch)=>{\r\n   let response=await profileAPI.getStatus(userId);\r\n            dispatch(setStatusAC(response.data));\r\n}\r\n\r\nexport const updateStatus=(status)=>async (dispatch)=>{\r\n   let response=await profileAPI.updateStatus(status);\r\n            if(response.data.resultCode===0) {\r\n                dispatch(setStatusAC(status));\r\n            }\r\n}\r\n\r\n\r\n\r\n\r\nexport default profileReducer;","\r\n\r\nlet initialState={};\r\n const sidebarReducer=(state=initialState,action)=>{\r\n\r\n    return state;\r\n}\r\n export default sidebarReducer;","import React from \"react\";\r\nimport {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENTPAGE = \"SET_CURRENTPAGE\";\r\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOOGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENTPAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENTPAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n}\r\n\r\n// создаем функцию для рефакторинга follow/unfollow\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    debugger\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\n//thunkCreator\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        debugger\r\n        followUnfollowFlow(dispatch, userId, usersAPI.followUsers.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\n//thunkCreator\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollowUsers.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React from \"react\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\n\r\nlet initialState={\r\n    id:null,\r\n    email:null,\r\n    login :null,\r\n    isAuth:false\r\n\r\n};\r\n\r\n const authReducer=(state=initialState,action)=>{\r\n     switch (action.type) {\r\n         case SET_USER_DATA:{\r\n             return {\r\n                 ...state,\r\n                 ...action.payload\r\n             }\r\n         }\r\n         default:\r\n             return state;\r\n     }\r\n }\r\n\r\n\r\n export const setAuthUserData=(id,email,login,isAuth)=>({ type:SET_USER_DATA,\r\n       payload:{id,email,login,isAuth}});\r\n//создаем thunkAC\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.authMe();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n   let response = await authAPI.login(email, password, rememberMe) ;\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"login\", {_error: message}));\r\n            }\r\n}\r\n\r\nexport const logout=()=>async (dispatch)=>{\r\n    let response=await authAPI.logout()\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null,null,null,false))\r\n            }\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\r\n\r\n\r\nlet initialState={\r\n   initialized:false\r\n\r\n};\r\n\r\n const appReducer=(state=initialState,action)=>{\r\n     switch (action.type) {\r\n         case INITIALIZED_SUCCESS:{\r\n             return {\r\n                 ...state,\r\n                 initialized: true\r\n             }\r\n         }\r\n         default:\r\n             return state;\r\n     }\r\n }\r\n\r\n\r\n export const initializedSuccess=()=>({ type:INITIALIZED_SUCCESS});\r\n\r\n//создаем thunkAC\r\nexport const initializeApp=()=>(dispatch)=>{\r\n    let promise=dispatch(getAuthUserData());\r\n    //dispatch(somethingElse());\r\n    promise.then(()=>{\r\n        dispatch(initializedSuccess());\r\n    })\r\n}\r\n\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers=combineReducers({\r\n    profilePage:profileReducer,\r\n    dialogsPage:dialogsReducer,\r\n    sidebar:sidebarReducer,\r\n    usersPage:usersReducer,\r\n    auth:authReducer,\r\n    app:appReducer,\r\n    form:formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store=createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow._store_=store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messagee</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n            <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n        </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>USERS</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Nav;","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.css';\r\nimport Users from \"../../Users/Users\";\r\n\r\n\r\nlet Paginator = ({ totalUsersCount,pageSize,currentPage,onCurrentPageChanged,portionSize=10}) => {\r\n\r\n    let pagesCount = Math.ceil( totalUsersCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount=Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber,setPortionNumber]=useState(1);\r\n    let leftPortionPageNumber=(portionNumber-1) * portionSize+1;\r\n    let rightPortionPageNumber=portionNumber*portionSize\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber>1 &&\r\n        <button onClick={()=>{setPortionNumber(portionNumber-1)}}>prev</button>}\r\n                {pages\r\n                    .filter(p=>p>=leftPortionPageNumber&&p<=rightPortionPageNumber)\r\n                    .map(p => {\r\n                        return (\r\n                            <span className={currentPage === p ? s.selectedPage : ''}\r\n                                  onClick={(e) => {\r\n                                      onCurrentPageChanged(p)\r\n                                  }}\r\n                            >{p}</span>\r\n                        )})\r\n                }\r\n        {portionCount>portionNumber &&\r\n            <button onClick={()=>{setPortionNumber(portionNumber+1)}}>next</button>\r\n        }\r\n            </div>\r\n\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/img/man.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nlet User = ({user,followingInProgress,unfollow,follow}) => {\r\n    return <div>\r\n        <div className={s.userItem}>\r\n            <div className={s.usersImg}>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img className={s.usersPhoto}\r\n                             alt=\"logo-Photo\"\r\n                             src={user.photos.small != null ? user.photos.small : userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id)\r\n                                  }}\r\n\r\n                        >UnFollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                    follow(user.id)\r\n                                  }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={s.userInfo}>\r\n                <div>\r\n                    <span>{user.name}</span>\r\n                    <span>{user.status}</span>\r\n                </div>\r\n                <div>\r\n                    <span>{\"u.location.country\"}</span>\r\n                    <span>{\"u.location.city\"}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n\r\n}\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = (props) => {\r\n    return (\r\n        <div>\r\n            {\r\n                props.users.map(u => <User key={u.id} user={u}\r\n                                           followingInProgress={props.followingInProgress}\r\n                                           follow={props.follow} unfollow={props.unfollow}/>\r\n                )\r\n            }\r\n            <Paginator currentPage={props.currentPage} onCurrentPageChanged={props.onCurrentPageChanged}\r\n                       totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}/>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Users;","import preloader from \"../../../assets/loading.gif\";\r\nimport React from \"react\";\r\n\r\nconst Preloader=(props)=>{\r\n    return(\r\n        <div>\r\n            <img src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\n const getUsersSelector = (state)=>{\r\n    return state.usersPage.users;\r\n}\r\nexport  const getUsers=createSelector(getUsersSelector,\r\n    (users)=>{\r\n    return users.filter(u=>true);\r\n})\r\n\r\nexport const getPageSize = (state)=>{\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount=(state)=>{\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage=(state)=>{\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching=(state)=>{\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress=(state)=>{\r\n    return state.usersPage.followingInProgress;\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress, getUsersThunkCreator,\r\n} from \"../../redux/users-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer  extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage,this.props.pageSize);\r\n    }\r\n\r\n    onCurrentPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber,this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n           return <>\r\n               {this.props.isFetching\r\n                   ?<Preloader/>\r\n                   :null}\r\n               <Users totalUsersCount={this.props.totalUsersCount}\r\n               currentPage={this.props.currentPage}\r\n               users={this.props.users}\r\n               pageSize={this.props.pageSize}\r\n               onCurrentPageChanged={this.onCurrentPageChanged}\r\n               follow={this.props.follow}\r\n               unfollow={this.props.unfollow}\r\n               followingInProgress={this.props.followingInProgress}\r\n             />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        users:getUsers(state),\r\n        pageSize:getPageSize(state),\r\n        totalUsersCount:getTotalUsersCount(state),\r\n        currentPage:getCurrentPage(state),\r\n        isFetching:getIsFetching(state),\r\n        followingInProgress:getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{ follow, unfollow,\r\n        setCurrentPage,toggleFollowingProgress,\r\n        getUsers:getUsersThunkCreator})\r\n)(UsersContainer);\r\n","import React, {useEffect, useState} from 'react';\r\n\r\n\r\n const ProfileStatusWithHooks = (props) => {\r\n\r\n       let [editMode,setEditMode]=useState(false);\r\n       let [status,setStatus]=useState(props.status);\r\n\r\n       useEffect(()=> {\r\n           setStatus(props.status);\r\n           },[props.status]);\r\n\r\n        const activateEditMode=()=>{\r\n         setEditMode(true);\r\n     }\r\n     const   deactivateEditMode=()=>{\r\n          setEditMode(false);\r\n          props.updateStatus(status);\r\n         };\r\n\r\n\r\n        const onStatusChange=(e)=>{\r\n            setStatus(e.currentTarget.value);\r\n        }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"_______\"}</span>\r\n            </div>\r\n            }\r\n            {editMode&&\r\n            <div>\r\n                <input  onBlur={deactivateEditMode} autoFocus={true}\r\n                onChange={onStatusChange}\r\n                value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state={\r\n        editMode:false,\r\n        status:this.props.status\r\n    }\r\n\r\n     activateEditMode=()=>{\r\n        this.setState({\r\n            editMode:true\r\n        })\r\n    }\r\n    deactivateEditMode=()=>{\r\n        this.setState({\r\n            editMode:false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange=(e)=>{\r\n       this.setState({\r\n           status: e.currentTarget.value\r\n       });\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"_______\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                     <div>\r\n                        <input  onChange={this.onStatusChange}\r\n                                onBlur={this.deactivateEditMode}\r\n                               value={this.state.status}\r\n                               autoFocus={true}/>\r\n                     </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\n\r\nconst ProfileInfo = (props) =>{\r\n    if(props.profile===null||props.profile===undefined){\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileItem}>\r\n\r\n            <div className={s.aboutme}>\r\n                <img className={s.avatar} src={props.profile.photos.small}></img>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n                <span> ABOUT ME: {props.profile.aboutMe}</span>\r\n            </div>\r\n            <div>\r\n                <span>My contacts: VK: {props.profile.contacts.vk}</span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport  s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://s1.1zoom.ru/b5050/289595-frederika_300x225.jpg'></img>\r\n            {props.massage}\r\n            <div>\r\n                <span> likes </span>{props.like}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React, { PureComponent} from 'react';\r\nimport  s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormsControls\";\r\n\r\nlet  maxLength10= maxLengthCreator(10);\r\n\r\nconst  MyPosts =React.memo((props) => {\r\n        let postsElement =\r\n            [...props.posts]\r\n                .reverse()\r\n                .map(p => (<Post massage={p.message} like={p.like}/>));\r\n\r\n        let onAddPost = (values) => {\r\n            props.addPost(values.newMyPostText);\r\n        }\r\n\r\n        return (\r\n            <div className={s.postwrapp}>\r\n                <h3>My posts</h3>\r\n                <div>\r\n                    <AddNewMyPostFormRedux onSubmit={onAddPost}/>\r\n                    <div className={s.posts}>\r\n                        {postsElement}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\nconst AddMyPostForm=(props)=>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newMyPostText\"}\r\n                        validate={[ requiredField,maxLength10]}\r\n                       placeholder={\"PostMessage\"}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button >Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewMyPostFormRedux=reduxForm({form:\"ProfileAddMyPostForm\"})(AddMyPostForm);\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        posts:state.profilePage.posts,\r\n        // newPostText:state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        addPost:(newMyPostText)=>{\r\n           dispatch(addPostActionCreator(newMyPostText));\r\n        },\r\n        }\r\n}\r\n\r\nconst  MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) =>{\r\n\r\n     return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"../Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        let userId=this.props.match.params.userId;\r\n        if(!userId){\r\n            userId=this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n       this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps=(state)=>{\r\n    return {\r\n        profile:state.profilePage.profile,\r\n        status:state.profilePage.status,\r\n        authorizedUserId:state.auth.id,\r\n        isAuth:state.auth.isAuth\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {getUserProfile,getStatus,updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n// let AuthRedirectComponent=withAuthRedirect(ProfileContainer);\r\n//\r\n\r\n// let WithUrlDataComponent = withRouter(AuthRedirectComponent);\r\n// export default  connect (mapStateToProps, {getUserProfile})(WithUrlDataComponent);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) =>{\r\n    return  <header className ={s.header}>\r\n        <img src = \"https://image.freepik.com/free-vector/eye-camera-logo_53295-268.jpg\"/>\r\n       <div className={s.loginBlock}>\r\n           { props.isAuth\r\n               ? <div>{props.login}-<button onClick={props.logout}>Log out</button></div>\r\n           : <NavLink to={'/login'} >Login</NavLink>}\r\n      </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport { logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header  {...this.props} />\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n\r\n});\r\nexport default  connect(mapStateToProps,{logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormsControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './../common/FormControls/FormControls.module.css';\r\n\r\n\r\nconst LoginForm = ({handleSubmit,error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"}\r\n                       component={Input}\r\n                       validate={[requiredField]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                       component={Input}\r\n                       validate={[requiredField]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={\"input\"} name={\"rememberMe\"} type={\"checkbox\"}/> remember\r\n            </div>\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Log in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN </h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","\r\nimport React, {Component, Suspense} from \"react\";\r\n\r\nexport const withSuspense =(Component)=>{\r\n\r\n    return(props)=>{\r\n      return  <Suspense fallback={<div>Loading...</div>}>\r\n                    <Component {...props}/>\r\n              </Suspense>\r\n    }\r\n}\r\n","import React, {Suspense} from 'react';\nimport './App.css';\nimport Nav from \"./components/Nav/Nav\";\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileInfo/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n    render() {\n        if(!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            < div className=\"app-wrapper\">\n                < HeaderContainer/>\n                < Nav/>\n                <div className=\"app-wrapper-content\">\n                    <Route path='/dialogs'\n                           render={withSuspense(DialogsContainer)}/>\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer /> }/>\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={withSuspense(LoginPage)}/>\n                    {/*<Route path ='/news'     component ={News}/>*/}\n                    {/*<Route path ='/music'     component ={Music}/>*/}\n                    {/*<Route path ='/settings'  component ={Settings}/>*/}\n                </div>\n            </div>\n        );\n\n    }\n}\nconst mapStateToProps=(state)=>({\n    initialized:state.app.initialized\n})\n\nconst AppContainer= compose(\n    withRouter,\n    connect(mapStateToProps,{initializeApp}))(App);\n\n const MainAppComponent=(props)=>{\n   return <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\nexport default MainAppComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n"," import React from 'react';\nimport store  from './redux/redux-store';\n import ReactDOM from 'react-dom';\n import './index.css';\n import  MainAppComponent from './App';\n import * as serviceWorker from './serviceWorker';\n\n\n  ReactDOM.render(\n      <MainAppComponent /> , document.getElementById('root')\n  );\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__cWba4\",\"error\":\"FormControls_error__1Ckn5\",\"formSummaryError\":\"FormControls_formSummaryError__2LMaA\"};","\r\n export const requiredField=(value)=>{\r\n    if (value) {\r\n        return undefined\r\n    }else{\r\n        return \"field is required\";\r\n    }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\nexport const maxLengthCreator =(maxLength) => (value)=>{\r\n    if (value.length>maxLength){\r\n        return `Max length is ${maxLength} sumbols`;\r\n    }else{\r\n        return undefined;\r\n    }\r\n}\r\n\r\n\r\n // export const maxLength30 = value=>{\r\n //     if (value.length>30){\r\n //         return \"Max length is 30 sumbols\";\r\n //     }else{\r\n //         return undefined;\r\n //     }\r\n // }","import React from \"react\";\r\nimport s from \"./FormControls.module.css\";\r\n\r\n\r\n\r\nexport const Textarea =({input,meta,...props})=>{\r\n    const  hasError=meta.touched && meta.error;\r\n    return(\r\n        <div className={s.formControl+\" \"+(hasError ? s.error : \"\" )}>\r\n            <div>\r\n                <textarea {...input}{...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport const Input =({input,meta,...props})=>{\r\n    const  hasError=meta.touched && meta.error;\r\n    return(\r\n        <div className={s.formControl+\" \"+(hasError ? s.error : \"\" )}>\r\n            <div>\r\n                <input {...input}{...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileItem\":\"ProfileInfo_profileItem__a65St\",\"previu\":\"ProfileInfo_previu__kLngW\",\"aboutme\":\"ProfileInfo_aboutme__2vN22\",\"avatar\":\"ProfileInfo_avatar__JlF55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__2aOVR\",\"userImg\":\"Users_userImg__1c0_u\",\"userItem\":\"Users_userItem__1Rlhq\",\"userInfo\":\"Users_userInfo__1urqC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__O_fQQ\",\"selectedPage\":\"Paginator_selectedPage__2Ctzb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postwrapp\":\"MyPosts_postwrapp__1wkcg\",\"posts\":\"MyPosts_posts__JIoQe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2SInn\",\"loginBlock\":\"Header_loginBlock__1hwzf\"};"],"sourceRoot":""}